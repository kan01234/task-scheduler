version: '3.7'
services:
  ts-zk:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - task-scheduler-network

  ts-kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: ${DOCKER_KAFKA_HOST}
      KAFKA_ZOOKEEPER_CONNECT: ts-zk:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - task-scheduler-network

  ts-producer:
    image: safghjkl/task-scheduler-producer
    depends_on:
      - ts-kafka
    environment:
      spring.kafka.bootstrap-servers: ts-kafka:9092
    networks:
      - task-scheduler-network
    ports:
      - "80:8080"

  ts-consumer:
    image: safghjkl/task-scheduler-consumer
    depends_on:
      - ts-kafka
      - ts-cassandra
    environment:
      spring.kafka.bootstrap-servers: ts-kafka:9092
      spring.data.cassandra.contact-points: ts-cassandra
      logging.path: /logs/consumer.log
      logging.level.org.springframework.web: INFO
      logging.level.com.dotterbear: INFO
    volumes:
      - "./consumer-logs:/logs"
    networks:
      - task-scheduler-network

  ts-cassandra:
    image: cassandra
    ports:
      - "9042:9042"
    networks:
      - task-scheduler-network

networks:
  task-scheduler-network:
    external: true
